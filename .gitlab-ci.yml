stages:
  - build
  - sign

variables:
  PROJECT_NAME: "HelloWorld"
  PROJECT_VERSION: "0.0.1"
  DOTNET_VERSION: "3.1"
  ENVIRONMENT_NAME: "TEST"

build-dotnet:
  stage: build
  image: mcr.microsoft.com/dotnet/sdk:3.1-bullseye
  before_script:
    - mkdir -p ${CI_PROJECT_DIR}/artifacts
    - mkdir -p ${CI_PROJECT_DIR}/packages
  script:
    - dotnet build dotnet/${PROJECT_NAME}.csproj -c Release
    - cp dotnet/bin/Release/netcoreapp${DOTNET_VERSION}/${PROJECT_NAME}-${PROJECT_VERSION}.dll ${CI_PROJECT_DIR}/packages/HelloWorld.dll
  artifacts:
    paths:
      - ${CI_PROJECT_DIR}/packages/HelloWorld.dll
    expire_in: 10 minutes

sign-artifacts:
  stage: sign
  image: docker:19.03.0
  services:
    - docker:19.03.0-dind
  variables:
    COMMAND: "sign"
  before_script:
    - mkdir -p ${CI_PROJECT_DIR}/artifacts
    - mkdir -p ${CI_PROJECT_DIR}/packages
  script:
    - echo ${REGISTRY_PASSWORD} | docker login ghcr.io -u ${REGISTRY_USERNAME} --password-stdin
    - docker pull ghcr.io/bayrakmustafa/codesigner:latest
    - docker run -i --rm --dns 8.8.8.8 --network host --volume ${CI_PROJECT_DIR}/packages:/codesign/examples --volume ${CI_PROJECT_DIR}/artifacts:/codesign/output -e USERNAME=${USERNAME} -e PASSWORD=${PASSWORD} -e CREDENTIAL_ID=${CREDENTIAL_ID} -e TOTP_SECRET=${TOTP_SECRET} -e ENVIRONMENT_NAME=${ENVIRONMENT_NAME} ghcr.io/bayrakmustafa/codesigner:latest ${COMMAND} -input_file_path=/codesign/examples/${PROJECT_NAME}.dll -output_dir_path=/codesign/output
  artifacts:
    paths:
      - ${CI_PROJECT_DIR}/artifacts/${PROJECT_NAME}.dll
    expire_in: 10 minutes
  dependencies:
    - build-dotnet